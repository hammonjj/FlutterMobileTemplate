name: Run Tests

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "*" ]

on:
  workflow_dispatch:
  
jobs:
  analyze-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.0'
          channel: 'stable'
          cache: true
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.4.3'

      - name: Install dependencies
        run: flutter pub get

      - name: Create .env file
        run: |
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> .env
          echo "API_RETRY_DELAY=${{ secrets.API_RETRY_DELAY }}" >> .env
          echo "API_RETRY_ATTEMPTS=${{ secrets.API_RETRY_ATTEMPTS }}" >> .env
          echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" >> .env
          echo "API_BASE_URL_NZ=${{ secrets.API_BASE_URL_NZ }}" >> .env
          echo "API_BASE_URL_US=${{ secrets.API_BASE_URL_US }}" >> .env

      - name: Generate Test Mocks
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Analyze project source
        run: flutter analyze

      - name: Run unit tests
        run: flutter test

  run-integration-tests:
    if: github.event.pull_request.draft == false
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.0'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Create .env file
        run: |
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> .env
          echo "API_RETRY_DELAY=${{ secrets.API_RETRY_DELAY }}" >> .env
          echo "API_RETRY_ATTEMPTS=${{ secrets.API_RETRY_ATTEMPTS }}" >> .env
          echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" >> .env
          echo "API_BASE_URL_NZ=${{ secrets.API_BASE_URL_NZ }}" >> .env
          echo "API_BASE_URL_US=${{ secrets.API_BASE_URL_US }}" >> .env

      - name: Start iOS Simulator
        uses: futureware-tech/simulator-action@v3
        with:
          model: 'iPhone 15'

      - name: Run integration tests
        run: flutter test -r github integration_test/integration_suite.dart
